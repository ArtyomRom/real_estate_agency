# Generated by Django 3.2.25 on 2025-04-03 20:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models
from django.conf import settings

def populate_owners(apps, schema_editor):
    # Получаем доступ к моделям Flat и Owner
    Flat = apps.get_model('property', 'Flat')
    Owner = apps.get_model('property', 'Owner')

    for flat in Flat.objects.all():
        # Создаем запись в Owner для каждого уникального владельца
        owner, created = Owner.objects.get_or_create(
            owner=flat.owner,  # или используйте flat.owner_pure_phone для идентификации
            owner_correct_phone=flat.owner_pure_phone
        )
        # При необходимости добавьте логику, если владельцев несколько

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('property', '0011_alter_flat_owner_pure_phone'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint', models.TextField(verbose_name='Текст жалобы')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.CharField(max_length=200, verbose_name='ФИО владельца')),
                ('owner_correct_phone', phonenumber_field.modelfields.PhoneNumberField(default='+79999999999', max_length=128, region='RU', verbose_name='Нормализованный номер владельца')),
            ],
        ),
        migrations.RemoveField(
            model_name='flat',
            name='owners_phonenumber',
        ),
        migrations.AlterField(
            model_name='flat',
            name='new_building',
            field=models.BooleanField(blank=True, choices=[(True, 'Да'), (False, 'Нет')], db_index=True, default=False, verbose_name='Новостройка'),
        ),
        migrations.AlterField(
            model_name='flat',
            name='owner_pure_phone',
            field=models.CharField(max_length=20, verbose_name='Номер владельца'),
        ),
        migrations.DeleteModel(
            name='Complaints',
        ),
        migrations.AddField(
            model_name='complaint',
            name='apartment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='property.flat', verbose_name='Квартира, на которую жаловались'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to=settings.AUTH_USER_MODEL, verbose_name='Кто жаловался'),
        ),
        # Добавляем выполнение функции для заполнения данных владельцев
        migrations.RunPython(populate_owners),
    ]
