# Generated by Django 5.1.7 on 2025-03-18 15:40

from django.db import migrations
from phonenumbers import parse, is_valid_number
from phonenumbers.phonenumberutil import format_number, PhoneNumberFormat


def update_data(apps, schema_editor):
    Flat = apps.get_model('property', 'Flat')

    batch_size = 5000  # Количество записей в одном пакете
    flats_to_update = []

    for index, flat in enumerate(Flat.objects.iterator()):
        if flat.owner_pure_phone:
            continue  # Если уже есть нормализованный номер, пропускаем

        try:
            phone_number = parse(flat.owners_phonenumber, "RU")

            if not is_valid_number(phone_number):
                continue

            formatted_number = format_number(phone_number, PhoneNumberFormat.NATIONAL)
            flat.owners_phonenumber = formatted_number
            flat.owner_pure_phone = formatted_number
            flats_to_update.append(flat)

            # Обновляем пакетами по `batch_size` записей
            if len(flats_to_update) >= batch_size:
                Flat.objects.bulk_update(flats_to_update, ['owner_pure_phone', 'owners_phonenumber'])
                flats_to_update.clear()  # Очищаем список, чтобы не занимал память

        except Exception:
            continue

    # Обновляем оставшиеся записи (если их < batch_size)
    if flats_to_update:
        Flat.objects.bulk_update(flats_to_update, ['owner_pure_phone', 'owners_phonenumber'])


class Migration(migrations.Migration):

    dependencies = [
        ('property', '0009_flat_owner_pure_phone_alter_complaints_id_and_more'),
    ]

    operations = [
        migrations.RunPython(update_data)
    ]
